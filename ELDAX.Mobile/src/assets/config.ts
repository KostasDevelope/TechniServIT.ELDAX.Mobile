export const config = {
     baseUrl: "http://localhost:3800/",
     urls: {
          getClientVersion: "api/getclientversion",

          authenticateExUrl: "api/account/authenticate",
          getEntityAuditUrl: "api/audit/getentityaudit/{id}",
          getDocumentAuditsUrl: "api/audit/getdocumentaudits",
          getEntityAuditsUr: "api/audit/getentityaudits",
          getDocumentDetailAuditUrl: "api/audit/getdetailsaudit/{documentId}",
          getLoginAuditsUrl: "api/audit/getloginaudits",
          exportLoggingToCSVUrl: "api/audit/exporttocsv",
          getDemandDefinedLogStatusUrl: "api/audit/getdemanddefinedlogstatus",
          getAuthenticationMethodsUrl: "api/authenticationmethodoperations/getauthenticationmethods",
          getAuthenticationMethodByIdUrl: "api/authenticationmethodoperations/getauthenticationmethodbyid/{id}",
          getAuthenticationMethodByCodeUrl: "api/authenticationmethodoperations/getauthenticationmethodbycode/{code}",
          getClassesDocumentChartDataUrl: "api/chartsoperations/getclassesdocumentchartdata",
          getClassesDocumentGridDataUrl: "api/chartsoperations/getclassesdocumentgriddata",
          getPeriodDocumentBarChartDataUrl: "api/chartsoperations/getperioddocumentbarchartdata",
          getTariffInfoUrl: "api/chartsoperations/gettariffinfo",
          setStorageArchiveDemandStatusUrl: "api/documentarchiving/setstoragearchivedemandstatus",
          deleteStorageArchivesUrl: "api/documentarchiving/deletestoragearchives",
          storageArchivingUrl: "api/documentarchiving/storagearchiving",
          getStorageArchivesUrl: "api/documentarchiving/getstoragearchives/{storageId}",
          getStorageArchiveUrl: "api/documentarchiving/getstoragearchive/{storagearchivedemandid}/{archiveid}",
          getDocumentClassesUrl: "api/documentclassoperations/getdocumentclasse/{storageId}",
          searchDocumentClassesUrl: "api/documentclassoperations/searchdocumentclasses",
          getTargetDocumentClassesUrl: "api/documentclassoperations/gettargetdocumentclasses/{storageId}/{sourceDocumentClassId}",
          getDocumentClassesCompatibilityUrl: "api/documentclassoperations/getdocumentclassescompatibilit/{sourceDocumentClassId}/{targetDocumentClassId}",
          createDocumentClassUrl: "api/documentclassoperations/createdocumentclass",
          getDocumentClassByIdUrl: "api/documentclassoperations/getdocumentclassbyid/{documentClassId}",
          deleteDocumentClassUrl: "api/documentclassoperations/deletedocumentclass/{documentClassId}",
          getDocumentClassChildrenUrl: "api/documentclassoperations/getdocumentclasschildren/{documentClassId}",
          getDocumentClassCollectionSettingsByIdUrl: "api/documentclassoperations/getdocumentclasscollectionsettingsbyid/{documentClassId}",
          getDocumentClassEmailSettingsByIdUrl: "api/documentclassoperations/getdocumentclassemailsettingsbyid/{documentClassId}",
          updateDocumentClassEmailSettingsUrl: "api/documentclassoperations/updatedocumentclassemailsettings",
          updateDocumentClassCollectionSettingsUrl: "api/documentclassoperations/updatedocumentclasscollectionsettings",
          getDocumentClassIdentificatorSettingsByIdUrl: "api/documentclassoperations/getdocumentclassidentificatorsettingsbyid/{documentClassId}",
          updateDocumentClassIdentificatorSettingsUrl: "api/documentclassoperations/updatedocumentclassIdentificatorsettings",
          changeDocumentClassEmailSettingsPasswordUrl: "api/documentclassoperations/changedocumentclassemailsettingspassword",
          getShreddingActivationsByClassIdsUrl: "api/documentclassoperations/getshreddingactivationsbyclassids",
          getDocumentTypesUrl: "api/documentclassoperations/getdocumenttypes/{storageId}",
          getDataBoxByDocumentClassIdUrl: "api/documentclassoperations/getdataboxbydocumentclassid/{documentClassId}",
          createOrUpdateDataBoxUrl: "api/documentclassoperations/createorupdatedatabox",
          getDocumentResearchRoomOutputUrl: "api/documentoperations/getdocumentresearchroomoutput/{documentGuid}",
          saveDocumentResearchRoomOutputUrl: "api/documentoperations/savedocumentresearchroomoutput",
          getDocumentQurantineResultUrl: "api/documentoperations/getdocumentqurantineresult/{documentGuid}",
          removeDocumentsFromShreddingProcessUrl: "api/documentoperations/removedocumentsfromshreddingprocess",
          includeDocumentsToShreddingProcessUrl: "api/documentoperations/includedocumentstoshreddingprocess",
          getShredingProcessDocumentsUrl: "api/documentoperations/getshredingprocessdocuments/{shredingProcessId}",
          moveDocuemntsToNewShredingProcessUrl: "api/documentoperations/movedocuemntstonewshredingprocess",
          confirmAllDocumentsForShreddingWithGuidUrl: "api/documentoperations/confirmalldocumentsforshreddingwithguid",
          getDocumentPreviewUrl: "api/documentoperations/getdocumentpreview/{documentId}",
          getHTMLAnnexUrl: "api/documentoperations/gethtmlannex/{documentId}",
          getReportAnnexDataUrl: "api/documentoperations/getreportannexdata/{documentId}",
          getDocumentValidationReportUrl: "api/documentoperations/getdocumentvalidationreport/{documentId}",
          getSimpleReporttUrl: "api/documentoperations/getsimplereport/{documentId}",
          getDetailedReportUrl: "api/documentoperations/getdetailedreport/{documentId}",
          getValidationDataReportUrl: "api/documentoperations/getvalidationdatareport/{documentId}",
          getValidationDataReportRawUrl: "api/documentoperations/getvalidationdatareportraw/{documentId}",
          getAllChangedDocumentsUrl: "api/documentoperations/getallchangeddocuments",
          confirmAllDocumentsForShreddingUrl: "api/documentoperations/confirmalldocumentsforshredding",
          changeShreddingCharacterVUrl: "api/documentoperations/changeshreddingcharacterv",
          manualShreddingMultipleUrl: "api/documentoperations/manualshredding",
          enlargePeriodAllDocumentsForShreddingUrl: "api/documentoperations/enlargeperiodalldocumentsforshredding",
          getAllDocumentsForShreddingUrl: "api/documentoperations/getalldocumentsforshredding",
          confirmChangedDocumentsUrl: "api/documentoperations/confirmchangeddocuments",
          createDocumentForExternalArchiveUrl: "api/documentoperations/createdocumentforexternalarchive",
          createDocumentUrl: "api/documentoperations/createdocument",
          createXADESLightUrl: "api/documentoperations/createxadeslight",
          updateXADESLightContentUrl: "api/documentoperations/updatexadeslightconten",
          updateDocumentUrl: "api/documentoperations/updatedocument",
          changeDocumentShreddingTypeUrl: "api/documentoperations/changedocumentshreddingtype",
          setDocumentContentUrl: "api/documentoperations/setdocumentcontent",
          changeDocumentShreddingTypeMultipleUrl: "api/documentoperations/changedocumentshreddingtypemultiple",
          getDocumentContentMultipleUrl: "api/documentoperations/getdocumentcontentmultiple",
          getDocumentContentUrl: "api/documentoperations/getdocumentcontent/{documentID}",
          getDocumentInfoUrl: "api/documentoperations/getdocumentinfo/{documentID}",
          searchUrl: "api/documentoperations/search",
          searchAutoCompleteUrl: "api/documentoperations/searchautocomplete",
          metaDataSearchUrl: "api/documentoperations/metadatasearch",
          deleteDocumentsUrl: "api/documentoperations/deletedocuments",
          deleteDocumentUrl: "api/documentoperations/deletedocument/{documentID}",
          setMultipleShreddingActivationUrl: "api/documentoperations/setmultipleshreddingactivation",
          runManualShreddingActivationUrl: "api/documentoperations/runmanualshreddingactivation",
          validateDocumentUrl: "api/documentoperations/validatedocument",
          signDocumentUrl: "api/documentoperations/signdocument",
          stampDocumentUrl: "api/documentoperations/stampdocument",
          getDefaultCertificateInfoUrl: "api/documentoperations/getdefaultcertificateinfo",
          getDefaultCertificateInfoContentUrl: "api/documentoperations/getdefaultcertificateinfocontent",
          getDocumentPropertyDefinitionsUrl: "api/documentpropertydefinitionoperations/getdocumentpropertydefinitions/{documentStorageId}/{documentClassId}/{assigned}",
          assignDocumentPropertyDefinitionStorageToDocumentClassUrl: "api/documentpropertydefinitionoperations/assigndocumentpropertydefinitionstoragetodocumentClass",
          createOrUpdateDocumentPropertyDefinitionUrl: "api/documentpropertydefinitionoperations/createorupdatedocumentpropertydefinition",
          getDocumentPropertyDefinitionByIdUrl: "api/documentpropertydefinitionoperations/getdocumentpropertydefinitionbyid/{documentPropertyDefinitionId}",
          deleteDocumentPropertyDefinitionUrl: "api/documentpropertydefinitionoperations/deletedocumentpropertydefinition",
          setDocumentPropertyUrl: "api/documentpropertyoperations/setdocumentproperty",
          setDocumentPropertyAndUniversalLookupParamValueIdUrl: "api/documentpropertyoperations/setdocumentpropertyanduniversallookupparamvalueid",
          setDocumentPropertiesUrl: "api/documentpropertyoperations/setdocumentproperties",
          getDocumentPropertyUrl: "api/documentpropertyoperations/getdocumentproperty/{docId}",
          getDocumentPropertiesByUniversalLookupIdUrl: "api/documentpropertyoperations/getdocumentpropertiesbyuniversalLookupId",
          getAllInfoControllersUrl: "api/eldaxapiinfo/getallinfocontrollers",
          sssignDocumentPropertyDefinitionStorageToDocumentClassUrl: "api/documentpropertydefinitionoperations/assigndocumentpropertydefinitionstoragetodocumentClass",
          
          sendDocsToDSUrl: "api/isrsoperations/senddocstods",
          attachMoreDocsToDSUrl: "api/isrsoperations/attachmoredocstods",
          modificationItemISRSUrl: "api/isrsoperations/modificationitemisrs",
          deactivationItemISRSUrl: "api/isrsoperations/deactivationitemisrs",

          createPackageUrl: "api/packageoperations/createpackage",
          getPackageContent: "api/packageoperations/getpackagecontent/{packageId}",
          checkSignatureInPackageContentUrl: "api/packageoperations/checksignatureinpackagecontent",
          checkDocumentClassIsForPackageUrl: "api/packageoperations/checkdocumentclassisforpackage/{classId}",

          getAllBOPermissionsUrl: "api/permissionoperations/getallbopermissions",
          getBOPermissionUrl: "api/permissionoperations/getbopermission/{appViewRight}",
          getPermissionsUrl: "api/permissionoperations/getpermissions/{storageId}",
          getApplicationRolesUrl: "api/permissionoperations/getapplicationroles",
          getPermissionsTemplateUrl: "api/permissionoperations/getpermissionstemplate",
          createOrUpdatePermissionUrl: "api/permissionoperations/getpermissionbyid/{permissionId}",
          deletePermissionUrl: "api/permissionoperations/deletepermission/{permissionId}",
          рasPermissionUrl: "api/permissionoperations/haspermission",

          getPublicationsUrl: "api/publicationoperations/createpublication",
          getLastPublicationNumberForUserUrl: "api/publicationoperations/getlastpublicationnumberforuser",
          updatePublicationUrl: "api/publicationoperations/updatepublication",
          getPublicationByIdUrl: "api/publicationoperations/getpublicationbyid/{publicationId}",
          deletePublicationUrl: "api/publicationoperations/deletepublication/{publicationId}",

          getShreddingActivationsUrl: "api/shreddingactivationoperations/getshreddingactivations",
          assignShreddingActivationStorageToDocumentClassUrl: "api/shreddingactivationoperations/assignshreddingactivationstoragetodocumentClass",
          updateShreddingActivationUrl: "api/shreddingactivationoperations/updateshreddingactivation",
          createShreddingActivationUrl: "api/shreddingactivationoperations/createshreddingactivation",
          getShreddingActivationByIdUrl: "api/shreddingactivationoperations/getshreddingactivationbyid/{shreddingActivationId}",

          getShreddingProcessesUrl: "api/shreddingprocessoperations/getshreddingprocesses",
          getFinishedShreddingProcessesByTimeIntervalUrl: "api/shreddingprocessoperations/getfinishedshreddingprocessesbytimeinterval",
          getShreddingProcessesByIdUrl: "api/shreddingprocessoperations/getshreddingprocessesbyid/{shreddingProcessId}",
          getShreddingProcessDocumentsUrl: "api/shreddingprocessoperations/getshreddingprocessdocuments/{shreddingProcessId}",

          getShreddingRulesUrl: "api/shreddingruleoperations/getshreddingrules",
          getShreddingRuleByIdUrl: "api/shreddingruleoperations/getshreddingrulebyid/{shreddingRuleId}",
          getShreddingTypesUrl: "api/shreddingtype/getshreddingtypes",
          searchShreddingTypesUrl: "api/shreddingtype/searchshreddingtypes",
          getShreddingTypesByDocumentsUrl: "api/shreddingtype/getshreddingtypesbydocuments",
          getShreddingTypesByStorageIdAndDocumentTypeUrl: "api/shreddingtype/getshreddingtypesbystorageanddocumenttype/{storageId}/{documentType}",
          createShreddingTypeUrl: "api/shreddingtype/createshreddingtype",
          ppdateShreddingTypeUrl: "api/shreddingtype/updateshreddingtype",
          getShreddingTypeByIdUrl: "api/shreddingtype/getshreddingtypebyid/{id}",
          deleteShreddingTypeUrl: "api/shreddingtype/deleteshreddingtype/{shreddingTypeId}",

          getSignedCertificatesUrl: "api/signcertificateoperations/getsignedcertificates/{storageId}",
          getSignedCertificatesForDocumentClassUrl: "api/signcertificateoperations/getsignedcertificatesfordocumentslass/{storageId}/{documentClassId}",
          getSignedCertificateListByDocumentClassUrl: "api/signcertificateoperations/getsignedcertificatelistbydocumentclass/{documentClassId}",
          createSignedCertificateUrl: "api/signcertificateoperations/createsignedcertificate",
          updateSignedCertificateUrl: "api/signcertificateoperations/updatesignedcertificate",
          deleteSignedCertificateUrl: "api/signcertificateoperations/deletesignedcertificate",
          deleteSignedCertificateFromDocumentClassUrl: "api/signcertificateoperations/deletesignedcertificatefromdocumentclass/{documentClassId}",
          getSignedCertificateByIdUrl: "api/signcertificateoperations/getsignedcertificatebyid/{signedCertificateId}",
          getSignedCertificateByDocumentClassIdUrl: "api/signcertificateoperations/getsignedcertificatebydocumentclassid/{documentClassId}",
          addSignedCertificateToDocumentClassUrl: "api/signcertificateoperations/addsignedcertificatetodocumentclass",
          checkPermissionsUrl: "api/signcertificateoperations/checkpermissions/{storageId}",
          getHSMsUrl: "api/signcertificateoperations/gethsms/{storageId}",
          getHSMSignCertificatesUrl: "api/signcertificateoperations/gethsmsigncertificates",

          saveSIPUrl: "api/sipoperations/savesip",
          getNsCaseUrl: "api/sipoperations/getnscase/{documentID}",
          getNsDocumentUrl: "api/sipoperations/getnsdocument/{documentID}",

          getStoragesUrl: "api/storageoperations/getstorages",
          searchStoragesUrl: "api/storageoperations/searchstorages",
          createStorageUrl: "api/storageoperations/createstorage",
          updateStorageUrl: "api/storageoperations/updatestorage",
          getStorageByIdUrl: "api/storageoperations/getstoragebyid/{storageId}",
          getStorageByCreditUrl: "api/storageoperations/getstoragebycredit",
          deleteStorageUrl: "api/storageoperations/deletestorage/{storageId}",
          getDeleteStorageInfoUrl: "api/storageoperations/getdeletestorageinfo/{storageId}",
          getStoragesByUserGroupIdUrl: "api/storageoperations/getstoragesbyusergroupid/{usergroupid}",

          isContentConverterAvailableUrl: "api/systemoperations/iscontentconverteravailable/{conversiontype}",
          convertPDFToPDFAUrl: "api/systemoperations/convertpdftopdfa",
          getSettingsByCodeUrl: "api/systemoperations/getsettingsbycode/{code}",
          setSettingUrl: "api/systemoperations/setsetting",
          createOrUpdateSettingUrl: "api/systemoperations/createorupdatesetting",
          contactHelpdeskUrl: "api/systemoperations/сontactрelpdesk",
          isWFServiceRunningUrl: "api/systemoperations/iswfservicerunning",
          getSettingByCodeUrl: "api/systemoperations/getsettingbycode/{code}",
          getCreditByStorageIdUrl: "api/systemoperations/getcreditbystorageid/{storageid}",
          getCreditUrl: "api/systemoperations/getcredit",
          getCreditInfoByStorageUrl: "api/systemoperations/getcreditinfobystorage/{storageid}",
          automaticAccountValidityProlongationUrl: "api/systemoperations/automaticaccountvalidityprolongation",

          getDocumentValidationInfoUrl: "api/timestampoperations/getdocumentvalidationinfo/{documentGuid}",

          getTSAsUrl: "api/tsaoperations/gettsas",
          getTSAByIdUrl: "api/tsaoperations/gettsabyid/{id}",
          getTSAByClassIdUrl: "api/tsaoperations/gettsabyclassid/{classid}",
          createOrUpdateTSAUrl: "api/tsaoperations/createorupdatetsa",
          deleteTSAUrl: "api/tsaoperations/deletetsa/{id}",
          requestTimeStampByDocumentHashUrl: "api/tsaoperations/requesttimestampbydocumenthash",
          uploadTSLCertificateUrl: "api/tslcertificatesadministrationoperations/uploadtslcertificate",
          getCertificateBySubjectKeyIdentificatorUrl: "api/tslcertificatesadministrationoperations/getcertificatebysubjectkeyidentificator/{subjectkeyidentificator}",

          lookupCreateUrl: "api/universallookupoperations/lookupcreate",
          getLookupByIdUrl: "api/universallookupoperations/getlookupbyid/{lookupId}",
          updateLookupUrl: "api/universallookupoperations/updatelookup",
          getAllLookupsUrl: "api/universallookupoperations/getalllookups",
          deleteLookupUrl: "api/universallookupoperations/deletelookup/{lookupId}",
          createLookupParamUrl: "api/universallookupoperations/createlookupparam",
          updateLookupParamUrl: "api/universallookupoperations/updatelookupparam",
          deleteLookupParamUrl: "api/universallookupoperations/deletelookupparam/{paramId}",
          createLookupItemUrl: "api/universallookupoperations/createlookupitem",
          updateLookupItemUrl: "api/universallookupoperations/updatelookupitem",
          getLookupItemParametersUrl: "api/universallookupoperations/getlookupitemparameters/{lookupItemId}",
          getAllLookupItemsUrl: "api/universallookupoperations/getalllookupitems/{lookupId}",
          deleteLookupItemUrl: "api/universallookupoperations/deletelookupitem/{lookupitemid}",
          getUniversalLookupsByStorageIdUrl: "api/universallookupoperations/getuniversallookupsbystorageId/{storageId}",
          getUniversalLookupPropertiesByParentUniversalLookupIdUrl: "api/universallookupoperations/getuniversallookuppropertiesbyparentUniversallookupId/{parentuniversallookupId}",
          getUniversalLookupByIdUrl: "api/universallookupoperations/getuniversallookupbyid/{parentuniversallookupid}",
          getDocumentPropertyValueUrl: "api/universallookupoperations/getdocumentpropertyvalue/{documentPropertyDefinitionId}/{universalLookupId}",

          getUserGroupsUrl: "api/usergroupoperations/getusergroups",
          getUserGroupsToSelectUrl: "api/usergroupoperations/getusergroupstoselect",
          getUserGroupsByStorageIdUrl: "api/usergroupoperations/getusergroupsbystorageid/{storageId}",
          createOrUpdateUserGroupUrl: "api/usergroupoperations/createorupdateusergroup",
          getUserGroupByIdUrl: "api/usergroupoperations/getusergroupbyid/{userGroupId}",
          deleteUserGroupUrl: "api/usergroupoperations/deleteusergroup/{userGroupId}",
          GetUsersByUserGroupUrl: "api/usergroupoperations/getusersbyusergroup/{userGroupId}",

          authenticateexUrl: "api/useroperations/authenticateex",
          isAuthenticatedUrl: "api/useroperations/isauthenticated",
          userLogoutUrl: "api/useroperations/userlogout",
          registerUserUrl: "api/useroperations/registeruser",
          getUsersUrl: "api/useroperations/getusers",
          createOrUpdateUserUrl: "api/useroperations/createorupdateuser",
          getUserByIdUrl: "api/useroperations/getuserbyid/{userId}",
          getUserByLoginUrl: "api/useroperations/getuserbylogin/{loginName}",
          getUserByIdIncludeUserGroupsIdsUrl: "api/useroperations/getuserbyidincludeusergroupsids/{userId}",
          deleteUserUrl: "api/useroperations/deleteuser/{userId}",
          changePasswordUrl: "api/useroperations/changepassword",
          changePasswordByLoginUrl: "api/useroperations/changepasswordbylogin",
          checkIfUserExistsByEmailUrl: "api/useroperations/checkifuserexistsbyemail/{email}",
          createUserSimpleInfrastructureByEmailUrl: "api/useroperations/createusersimpleinfrastructurebyemail",
          sendNewPINUrl: "api/useroperations/sendnewpin",
          checkStrengthUrl: "api/useroperations/checkstrength/{password}",
          getPolicyTypeUrl: "api/useroperations/getpolicytype",
          isUserSupervisorUrl: "api/useroperations/isusersupervisor",
          isUserHasEditationUserRightsUrl: "api/useroperations/isuserhaseditationuserrights",
          isUserSupervisorNoGroupUrl: "api/useroperations/isusersupervisornogroup",
          unlockUserUrl: "api/useroperations/unlockuser",
          setNewPasswordSendByEmailUrl: "api/useroperations/setnewpasswordsendbyemail"
        }
}